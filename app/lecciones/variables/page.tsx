import LessonPage from "@/components/lessons/LessonPage";

export default function VariablesLesson() {
  const steps = [
    {
      title: "¬øQu√© son las variables?",
      content:
        "Las variables son uno de los conceptos m√°s importantes en programaci√≥n. Son como cajas donde guardamos informaci√≥n que queremos usar m√°s adelante. En HispanoLang, usamos la palabra `variable` para crear una nueva caja con un nombre y un valor. Ese valor puede ser texto, n√∫meros, o incluso resultados de operaciones.",
      code: `variable mi_nombre = "Ana"
mostrar mi_nombre`,
      explanation:
        "Aqu√≠ creamos una variable llamada `mi_nombre` y le asignamos el valor 'Ana'. El texto va entre comillas dobles para indicar que es una cadena de caracteres (string). Luego usamos `mostrar` para imprimir el valor en pantalla. Esto significa que el programa tomar√° el contenido de la caja llamada `mi_nombre` y lo mostrar√°. Las variables te permiten reutilizar valores sin tener que escribirlos varias veces, y tambi√©n modificarlos cuando sea necesario.",
      challenge:
        "üß© Desaf√≠o r√°pido: Crea una variable llamada `mi_edad` con tu edad y mu√©strala en pantalla. Observa c√≥mo HispanoLang te permite combinar texto y n√∫meros f√°cilmente.",
    },
    {
      title: "Diferentes tipos de variables",
      content:
        "En programaci√≥n, no toda la informaci√≥n es igual. A veces queremos guardar palabras, otras veces n√∫meros o respuestas de tipo 's√≠' o 'no'. A eso se le llaman tipos de datos. En HispanoLang tenemos tres b√°sicos: texto, n√∫meros y valores verdadero/falso (tambi√©n llamados booleanos).",
      code: `variable nombre = "Juan"
variable edad = 25
variable es_estudiante = verdadero

mostrar "Nombre: " + nombre
mostrar "Edad: " + edad
mostrar "Es estudiante: " + es_estudiante`,
      explanation:
        "Creamos tres variables: una con texto (`nombre`), otra con un n√∫mero (`edad`) y una booleana (`es_estudiante`). Los textos van entre comillas dobles, los n√∫meros no. Los valores `verdadero` y `falso` representan respuestas l√≥gicas. Tambi√©n usamos el operador `+` para unir texto con valores, lo que se conoce como concatenaci√≥n. Este tipo de operaciones son muy comunes al crear mensajes din√°micos, por ejemplo al mostrar informaci√≥n personalizada para cada usuario.",
      challenge:
        "üß© Desaf√≠o r√°pido: Crea variables para tu color favorito, tu n√∫mero de la suerte y si te gusta programar (verdadero/falso). Luego muestra todo en una frase usando `mostrar` y el operador `+`.",
    },
    {
      title: "Cambiar el valor de una variable",
      content:
        "Una variable no es algo fijo. Podemos cambiar su contenido en cualquier momento usando el operador de asignaci√≥n `=`. Esto nos permite actualizar informaci√≥n, como un contador o un puntaje en un juego.",
      code: `variable contador = 0
mostrar "Contador inicial: " + contador

contador = 5
mostrar "Contador despu√©s: " + contador

contador = contador + 3
mostrar "Contador final: " + contador`,
      explanation:
        "Primero creamos una variable `contador` y le damos el valor 0. Luego cambiamos su valor a 5, y despu√©s sumamos 3 m√°s. Cada vez que usamos `=` estamos reasignando el contenido de la caja. En la l√≠nea `contador = contador + 3`, HispanoLang toma el valor actual del contador (5), le suma 3, y guarda el nuevo resultado (8). Este concepto es esencial: las variables pueden cambiar mientras el programa se ejecuta, permiti√©ndonos llevar el control de estados, c√°lculos o repeticiones.",
      challenge:
        "üß© Desaf√≠o r√°pido: Crea una variable `puntos` que empiece en 10, luego c√°mbiala a 25, y finalmente s√∫male 5 m√°s. Muestra el resultado en cada paso.",
    },
    {
      title: "Variables con operaciones matem√°ticas",
      content:
        "Las variables tambi√©n pueden participar en operaciones matem√°ticas. Podemos hacer sumas, restas, multiplicaciones y divisiones con ellas, igual que en una calculadora, pero guardando los resultados para usarlos despu√©s.",
      code: `variable precio = 100
variable descuento = 20
variable precio_final = precio - descuento

mostrar "Precio original: " + precio
mostrar "Descuento: " + descuento
mostrar "Precio final: " + precio_final`,
      explanation:
        "En este ejemplo usamos dos variables (`precio` y `descuento`) y calculamos una nueva (`precio_final`). Usamos el operador `-` para restar y almacenamos el resultado en otra variable. Los operadores b√°sicos en HispanoLang son:\n\n‚Ä¢ `+` para sumar o concatenar texto\n‚Ä¢ `-` para restar\n‚Ä¢ `*` para multiplicar\n‚Ä¢ `/` para dividir\n\nEstas operaciones permiten que los programas realicen c√°lculos autom√°ticos y trabajen con resultados din√°micos. Por ejemplo, podr√≠as calcular precios con impuestos, notas promedio, o distancias sin hacerlo manualmente.",
      challenge:
        "üß© Desaf√≠o r√°pido: Crea dos variables `base` y `altura`, calcula el √°rea de un rect√°ngulo (base √ó altura) y muestra el resultado con `mostrar`.",
    },
    {
      title: "¬°Pr√°ctica libre!",
      content:
        "Ahora es tu turno. Crea tus propias variables y experimenta con diferentes tipos de datos, nombres y valores. No hay una sola respuesta correcta: lo importante es practicar y entender c√≥mo se comportan las variables.",
      code: `variable mi_variable = "¬°Hola mundo!"
mostrar mi_variable`,
      explanation:
        "En esta pr√°ctica libre puedes escribir tu propio c√≥digo y ver c√≥mo responde el int√©rprete. Intenta combinar texto con operaciones, cambiar valores, o crear mensajes personalizados. Recuerda que la pr√°ctica es la mejor forma de aprender: cuanto m√°s escribas c√≥digo, m√°s natural te resultar√° entender c√≥mo funcionan las variables y su relaci√≥n con los datos.",
      challenge:
        "üß© Desaf√≠o r√°pido: Crea una variable `pais` y muestra un mensaje que diga 'Vivo en [tu pa√≠s]'. Luego, agrega otra variable `ciudad` y combina ambas en un solo mensaje.",
      summary:
        "üß† Recuerda:\n\n‚Ä¢ Usa `variable` para crear una nueva caja.\n‚Ä¢ Puedes cambiar su contenido en cualquier momento.\n‚Ä¢ Las variables pueden guardar texto, n√∫meros o valores verdadero/falso.\n‚Ä¢ Usa `mostrar` para ver el contenido de las variables en pantalla.\n‚Ä¢ Y lo m√°s importante: ¬°experimenta y divi√©rtete aprendiendo!",
    },
  ];

  return (
    <LessonPage
      badge={{ emoji: "üì¶", text: "Lecci√≥n 1" }}
      title="Variables en"
      titleGradient=" Hispano Lang"
      description="Aprende a almacenar y manipular datos paso a paso"
      steps={steps}
      nextLessonUrl="/lecciones/tipos-datos"
      nextLessonTitle="Tipos de Datos"
    />
  );
}
