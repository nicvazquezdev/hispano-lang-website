import LessonPage from "@/components/lessons/LessonPage";

export default function TiposDatosLesson() {
  const steps = [
    {
      title: "¬øQu√© son los tipos de datos?",
      content:
        "En programaci√≥n, no toda la informaci√≥n es igual. Los tipos de datos nos ayudan a entender qu√© clase de informaci√≥n estamos manejando y qu√© operaciones podemos hacer con ella. Es como tener diferentes tipos de cajas: algunas para n√∫meros, otras para texto, y otras para respuestas de s√≠ o no.",
      code: `variable numero = 42
variable texto = "Hola mundo"
variable es_verdadero = verdadero

mostrar "N√∫mero: " + numero
mostrar "Texto: " + texto
mostrar "Booleano: " + es_verdadero`,
      explanation:
        "Aqu√≠ vemos los tres tipos b√°sicos de datos en HispanoLang: n√∫meros (sin comillas), texto (entre comillas dobles), y valores booleanos (verdadero/falso). Cada tipo se comporta de manera diferente. Los n√∫meros permiten operaciones matem√°ticas, el texto se puede concatenar con el operador +, y los booleanos representan estados l√≥gicos. Es importante entender estos tipos porque el int√©rprete los trata de manera distinta y nos permite hacer diferentes operaciones con cada uno.",
      challenge:
        "üß© Desaf√≠o r√°pido: Crea tres variables con tu edad (n√∫mero), tu nombre (texto) y si tienes mascota (verdadero/falso). Luego mu√©stralas todas en pantalla.",
    },
    {
      title: "N√∫meros: Enteros y Decimales",
      content:
        "Los n√∫meros son fundamentales en programaci√≥n. En HispanoLang podemos usar n√∫meros enteros (como 5, 100, -3) y n√∫meros decimales (como 3.14, 2.5, -0.5). Los n√∫meros nos permiten hacer c√°lculos, contar elementos, y representar medidas o cantidades.",
      code: `variable entero = 25
variable decimal = 3.14159
variable negativo = -10

variable suma = entero + decimal
variable multiplicacion = entero * 2

mostrar "Entero: " + entero
mostrar "Decimal: " + decimal
mostrar "Negativo: " + negativo
mostrar "Suma: " + suma
mostrar "Multiplicaci√≥n: " + multiplicacion`,
      explanation:
        "Los n√∫meros en HispanoLang pueden ser positivos o negativos, enteros o decimales. Podemos hacer todas las operaciones matem√°ticas b√°sicas: suma (+), resta (-), multiplicaci√≥n (*) y divisi√≥n (/). Cuando trabajamos con n√∫meros, no necesitamos comillas. El int√©rprete entiende autom√°ticamente que es un valor num√©rico y nos permite realizar c√°lculos. Esto es muy √∫til para crear calculadoras, procesar datos, o hacer cualquier tipo de operaci√≥n matem√°tica en nuestros programas.",
      challenge:
        "üß© Desaf√≠o r√°pido: Crea variables para el precio de un producto (25.99), el descuento (5.50) y calcula el precio final. Muestra todos los valores.",
    },
    {
      title: "Cadenas de Texto (Strings)",
      content:
        "Las cadenas de texto, tambi√©n llamadas strings, son secuencias de caracteres que representan palabras, frases o cualquier informaci√≥n textual. En HispanoLang, todo el texto debe ir entre comillas dobles para que el int√©rprete sepa que es una cadena de caracteres y no una variable o n√∫mero.",
      code: `variable saludo = "¬°Hola!"
variable nombre = "Mar√≠a"
variable apellido = "Garc√≠a"

variable nombre_completo = nombre + " " + apellido
variable mensaje = saludo + " " + nombre

mostrar nombre_completo
mostrar mensaje
mostrar "Mi nombre tiene " + nombre.longitud() + " letras"`,
      explanation:
        "Las cadenas de texto van siempre entre comillas dobles. Podemos concatenar (unir) cadenas usando el operador +. Tambi√©n podemos usar m√©todos como .longitud() para obtener informaci√≥n sobre la cadena. Las cadenas son muy √∫tiles para crear mensajes personalizados, procesar informaci√≥n del usuario, o mostrar resultados de manera legible. Es importante recordar que cuando concatenamos texto con n√∫meros, HispanoLang convierte autom√°ticamente los n√∫meros a texto para poder unirlos.",
      challenge:
        "üß© Desaf√≠o r√°pido: Crea variables para tu ciudad y pa√≠s, √∫nelas en una frase como 'Vivo en [ciudad], [pa√≠s]' y muestra la longitud total del mensaje.",
    },
    {
      title: "Valores Booleanos",
      content:
        "Los valores booleanos representan estados l√≥gicos: verdadero o falso. Son fundamentales para tomar decisiones en programaci√≥n, como '¬øes mayor de edad?', '¬øtiene permiso?', o '¬øest√° activo?'. Solo pueden tener dos valores: verdadero o falso.",
      code: `variable es_mayor = verdadero
variable tiene_licencia = falso
variable es_estudiante = verdadero

mostrar "Es mayor de edad: " + es_mayor
mostrar "Tiene licencia: " + tiene_licencia
mostrar "Es estudiante: " + es_estudiante

variable puede_conducir = es_mayor y tiene_licencia
mostrar "Puede conducir: " + puede_conducir`,
      explanation:
        "Los valores booleanos (verdadero/falso) son la base de la l√≥gica en programaci√≥n. Nos permiten representar estados y condiciones. Podemos usar operadores l√≥gicos como 'y' (AND) y 'o' (OR) para combinar condiciones. Por ejemplo, 'puede conducir' es verdadero solo si 'es mayor' Y 'tiene licencia' son ambos verdaderos. Los booleanos son esenciales para crear programas que tomen decisiones inteligentes basadas en diferentes condiciones.",
      challenge:
        "üß© Desaf√≠o r√°pido: Crea variables para si tienes hambre, si tienes dinero, y si el restaurante est√° abierto. Luego determina si puedes comer (hambriento Y con dinero Y restaurante abierto).",
    },
    {
      title: "Valores Especiales: Nulo e Indefinido",
      content:
        "A veces necesitamos representar la ausencia de valor o un estado desconocido. HispanoLang tiene dos valores especiales para esto: nulo (representa la ausencia intencional de valor) e indefinido (representa que algo no ha sido definido o no existe).",
      code: `variable valor_nulo = nulo
variable valor_indefinido = indefinido
variable nombre = "Juan"

mostrar "Valor nulo: " + valor_nulo
mostrar "Valor indefinido: " + valor_indefinido
mostrar "Nombre: " + nombre

// Simulando un valor que podr√≠a no existir
variable telefono = nulo
mostrar "Tel√©fono: " + telefono`,
      explanation:
        "Los valores nulo e indefinido son √∫tiles para manejar casos donde no tenemos informaci√≥n o cuando algo no ha sido inicializado. 'Nulo' se usa cuando intencionalmente no hay valor (como un tel√©fono opcional), mientras que 'indefinido' indica que algo no ha sido definido. Estos valores son importantes para crear programas robustos que manejen situaciones donde los datos podr√≠an no estar disponibles. Nos ayudan a evitar errores y a crear l√≥gica condicional m√°s sofisticada.",
      challenge:
        "üß© Desaf√≠o r√°pido: Crea una variable para un email opcional (inicialmente nulo) y otra para una direcci√≥n que no se ha definido (indefinido). Muestra ambos valores y explica la diferencia.",
    },
    {
      title: "¬°Pr√°ctica libre!",
      content:
        "Ahora es tu turno de experimentar con todos los tipos de datos que has aprendido. Combina n√∫meros, texto, booleanos y valores especiales para crear programas m√°s complejos e interesantes.",
      code: `variable mi_edad = 25
variable mi_nombre = "Ana"
variable es_programador = verdadero

mostrar "Hola, soy " + mi_nombre
mostrar "Tengo " + mi_edad + " a√±os"
mostrar "¬øSoy programador? " + es_programador`,
      explanation:
        "En esta pr√°ctica libre puedes combinar todos los tipos de datos que has aprendido. Intenta crear programas que usen n√∫meros para c√°lculos, texto para mensajes personalizados, booleanos para l√≥gica, y valores especiales para manejar casos excepcionales. La clave est√° en entender cu√°ndo usar cada tipo y c√≥mo combinarlos efectivamente. Recuerda que la pr√°ctica constante es la mejor forma de dominar estos conceptos fundamentales.",
      challenge:
        "üß© Desaf√≠o r√°pido: Crea un perfil personal con tu nombre, edad, ciudad, si tienes trabajo, y un hobby. Luego crea un mensaje completo que combine toda esta informaci√≥n.",
      summary:
        "üß† Recuerda:\n\n‚Ä¢ Los n√∫meros permiten operaciones matem√°ticas y no van entre comillas.\n‚Ä¢ El texto va entre comillas dobles y se puede concatenar con +.\n‚Ä¢ Los booleanos (verdadero/falso) representan estados l√≥gicos.\n‚Ä¢ Nulo e indefinido manejan la ausencia de valores.\n‚Ä¢ Cada tipo de dato tiene sus propias operaciones y comportamientos.\n‚Ä¢ ¬°Experimenta combinando diferentes tipos para crear programas m√°s ricos!",
    },
  ];

  return (
    <LessonPage
      badge={{ emoji: "üî¢", text: "Lecci√≥n 2" }}
      title="Tipos de Datos en"
      titleGradient=" Hispano Lang"
      description="Aprende sobre n√∫meros, texto, booleanos y valores especiales"
      steps={steps}
    />
  );
}
