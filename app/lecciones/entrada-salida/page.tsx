import LessonPage from "@/components/lessons/LessonPage";

export default function EntradaSalidaLesson() {
  const steps = [
    {
      title: "¬øQu√© es la entrada y salida?",
      content:
        "La entrada y salida (I/O por sus siglas en ingl√©s) son la forma en que nuestros programas se comunican con el mundo exterior. La entrada es informaci√≥n que el usuario nos da (como escribir su nombre), y la salida es informaci√≥n que el programa muestra (como un mensaje de bienvenida). Esta interacci√≥n es lo que hace que los programas sean √∫tiles e interactivos.",
      code: `mostrar "¬°Hola! Bienvenido a HispanoLang"
mostrar "Este es un mensaje de salida"
mostrar "Los programas pueden mostrar texto en pantalla"`,
      explanation:
        "El comando `mostrar` es nuestra forma b√°sica de salida. Nos permite imprimir mensajes, resultados de c√°lculos, o valores de variables en la pantalla. Todo lo que ponemos despu√©s de `mostrar` se mostrar√° al usuario. Podemos mostrar texto (entre comillas), n√∫meros, variables, o combinar m√∫ltiples valores usando el operador +. La salida es esencial porque sin ella, no podr√≠amos ver qu√© hace nuestro programa.",
      challenge:
        "üß© Desaf√≠o r√°pido: Usa `mostrar` para crear tres mensajes: uno de bienvenida, uno que diga tu lenguaje de programaci√≥n favorito, y uno de despedida.",
    },
    {
      title: "Mostrando Variables",
      content:
        "Adem√°s de mostrar texto fijo, podemos mostrar el contenido de variables. Esto es muy √∫til para ver qu√© informaci√≥n est√° almacenada en nuestro programa y para crear mensajes din√°micos que cambien seg√∫n los datos.",
      code: `variable nombre = "Mar√≠a"
variable edad = 28
variable ciudad = "Barcelona"

mostrar nombre
mostrar edad
mostrar "Hola, soy " + nombre
mostrar "Tengo " + edad + " a√±os"
mostrar "Vivo en " + ciudad`,
      explanation:
        "Podemos mostrar variables de dos formas: directamente (solo la variable) o combin√°ndolas con texto usando el operador +. Cuando combinamos texto con variables, HispanoLang convierte autom√°ticamente los n√∫meros a texto para poder unirlos. Esta concatenaci√≥n nos permite crear mensajes personalizados y din√°micos. Es la base para crear interfaces de usuario que se adapten a diferentes datos y situaciones.",
      challenge:
        "üß© Desaf√≠o r√°pido: Crea variables para tu comida favorita, tu color favorito y tu a√±o de nacimiento. Luego crea un mensaje completo que combine las tres usando `mostrar`.",
    },
    {
      title: "Entrada B√°sica: Comando leer",
      content:
        "El comando `leer` nos permite obtener informaci√≥n del usuario. Cuando usamos `leer` seguido de un nombre de variable, el programa se detiene y espera a que el usuario escriba algo. Lo que el usuario escriba se guardar√° en esa variable y podremos usarlo en nuestro programa.",
      code: `leer nombre
mostrar "¬°Hola " + nombre + "!"

leer edad
mostrar "Tienes " + edad + " a√±os"`,
      explanation:
        "El comando `leer` es fundamental para crear programas interactivos. Cuando el programa llega a una l√≠nea con `leer`, se pausa y espera que el usuario escriba algo y presione Enter. Lo que el usuario escriba se guarda autom√°ticamente en la variable que especificamos. Esto nos permite crear programas que se adapten a cada usuario, recopilando informaci√≥n como nombres, edades, preferencias, o cualquier otro dato que necesitemos. Es importante entender que `leer` siempre espera input del usuario antes de continuar.",
      challenge:
        "üß© Desaf√≠o r√°pido: Usa `leer` para pedir el nombre del usuario y su comida favorita. Luego muestra un mensaje personalizado como 'Hola [nombre], a ti tambi√©n te gusta [comida]'.",
    },
    {
      title: "Entrada con Mensaje",
      content:
        "Podemos hacer que `leer` sea m√°s claro agregando un mensaje que le indique al usuario qu√© debe escribir. Esto se hace poniendo el mensaje entre comillas despu√©s del nombre de la variable. As√≠ el usuario sabe exactamente qu√© informaci√≥n se espera de √©l.",
      code: `leer nombre "¬øCu√°l es tu nombre?"
mostrar "Hola " + nombre

leer edad "¬øCu√°ntos a√±os tienes?"
mostrar "Tienes " + edad + " a√±os"

leer ciudad "¬øDe d√≥nde eres?"
mostrar "Qu√© bonito es " + ciudad`,
      explanation:
        "Agregar mensajes descriptivos a `leer` mejora enormemente la experiencia del usuario. En lugar de que el programa simplemente se detenga sin explicaci√≥n, el usuario ve un mensaje claro que le indica qu√© debe ingresar. Esto hace que nuestros programas sean m√°s profesionales y f√°ciles de usar. La sintaxis es: `leer variable 'mensaje'`. El mensaje debe ir entre comillas y aparecer√° antes de que el usuario escriba. Esta pr√°ctica es fundamental en programaci√≥n: siempre debemos comunicar claramente qu√© esperamos del usuario.",
      challenge:
        "üß© Desaf√≠o r√°pido: Crea un programa que pida el nombre del usuario, su edad, y su ciudad natal (cada uno con un mensaje claro). Luego muestra toda la informaci√≥n en un mensaje completo.",
    },
    {
      title: "Combinando Entrada y Salida",
      content:
        "La verdadera potencia surge cuando combinamos entrada y salida para crear programas interactivos. Podemos pedir informaci√≥n al usuario, procesarla (hacer c√°lculos, combinarla con otras variables), y mostrar resultados personalizados.",
      code: `leer nombre "¬øC√≥mo te llamas?"
leer edad "¬øCu√°ntos a√±os tienes?"

variable edad_en_10_anos = edad + 10

mostrar "Hola " + nombre + ", ¬°es un placer conocerte!"
mostrar "Actualmente tienes " + edad + " a√±os"
mostrar "En 10 a√±os tendr√°s " + edad_en_10_anos + " a√±os"`,
      explanation:
        "Este ejemplo muestra el ciclo completo de interacci√≥n: pedimos informaci√≥n (entrada), la procesamos (c√°lculos), y mostramos resultados (salida). Primero usamos `leer` para obtener el nombre y edad del usuario. Luego hacemos un c√°lculo simple (sumar 10 a√±os) y finalmente usamos `mostrar` varias veces para presentar la informaci√≥n de forma clara y ordenada. Este patr√≥n (entrada ‚Üí procesamiento ‚Üí salida) es la base de casi todos los programas. Nos permite crear aplicaciones que resuelvan problemas reales y se adapten a las necesidades espec√≠ficas de cada usuario.",
      challenge:
        "üß© Desaf√≠o r√°pido: Pide al usuario dos n√∫meros, s√∫malos, r√©stalos y multipl√≠calos. Muestra los tres resultados con mensajes descriptivos.",
    },
    {
      title: "¬°Pr√°ctica libre!",
      content:
        "Ahora es tu turno de crear programas completamente interactivos. Combina `leer` y `mostrar` para crear di√°logos, hacer preguntas, realizar c√°lculos con datos del usuario, y presentar resultados de forma clara.",
      code: `leer nombre "¬øC√≥mo te llamas?"
mostrar "¬°Hola " + nombre + "!"

leer edad "¬øCu√°ntos a√±os tienes?"
mostrar "Tienes " + edad + " a√±os"`,
      explanation:
        "En esta pr√°ctica libre puedes experimentar creando programas que interact√∫en con el usuario de formas creativas. Intenta crear conversaciones, cuestionarios, calculadoras interactivas, o cualquier programa que necesite informaci√≥n del usuario. La clave est√° en pensar en qu√© informaci√≥n necesitas, c√≥mo pedirla de forma clara, y c√≥mo presentar los resultados de manera √∫til. Recuerda que un buen programa siempre comunica claramente qu√© espera del usuario y muestra resultados comprensibles.",
      challenge:
        "üß© Desaf√≠o r√°pido: Crea un programa que pida el nombre, edad y hobby del usuario. Luego calcula en qu√© a√±o naci√≥ (aproximadamente) y muestra un perfil completo con toda la informaci√≥n.",
      summary:
        "üß† Recuerda:\n\n‚Ä¢ Usa `mostrar` para presentar informaci√≥n al usuario.\n‚Ä¢ Usa `leer` para obtener informaci√≥n del usuario.\n‚Ä¢ Agrega mensajes descriptivos a `leer` para claridad.\n‚Ä¢ Combina entrada y salida para crear programas interactivos.\n‚Ä¢ El patr√≥n entrada ‚Üí procesamiento ‚Üí salida es fundamental.\n‚Ä¢ ¬°La comunicaci√≥n clara con el usuario es esencial!",
    },
  ];

  return (
    <LessonPage
      badge={{ emoji: "üí¨", text: "Lecci√≥n 3" }}
      title="Entrada y Salida en"
      titleGradient=" Hispano Lang"
      description="Aprende a interactuar con el usuario mediante entrada y salida"
      steps={steps}
      prevLessonUrl="/lecciones/tipos-datos"
      prevLessonTitle="Tipos de Datos"
      nextLessonUrl="/lecciones/operadores"
      nextLessonTitle="Operadores"
    />
  );
}
